{"version":3,"sources":["snake.js"],"names":["STATE_RUNNING","STATE_LOSING","TICK","SQUARE_SIZE","BOARD_WIDTH","BOARD_HEIGHT","GROW_SCALE","COLORS","DIRECTIONS_MAP","state","canvas","context","snake","x","y","direction","prey","parseInt","Math","random","growing","paint_color","score","runState","randomXY","tick","head","dx","dy","highestIndex","length","tail","interval","Object","assign","didScore","idx","sq","splice","push","detectCollition","document","getElementById","innerHTML","requestAnimationFrame","draw","setTimeout","drawPixel","color","fillStyle","fillRect","clearRect","window","onload","querySelector","getContext","onkeydown","e","keyCode","snake_color"],"mappings":"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","file":"snake.72ff5d51.js","sourceRoot":"../src","sourcesContent":["const STATE_RUNNING = 1;\r\nconst STATE_LOSING = 2;\r\n\r\nconst TICK = 60;\r\nconst SQUARE_SIZE = 20;\r\nconst BOARD_WIDTH = 35;\r\nconst BOARD_HEIGHT = 35;\r\nconst GROW_SCALE = 1;\r\nconst COLORS = {\r\n    '49':'#22dd22',\r\n    '50':'#ff4D27',\r\n    '51':'#22eee1',\r\n    '52':'#e90cff'\r\n}\r\n\r\nconst DIRECTIONS_MAP = {\r\n    '65': [-1,0],\r\n    '68': [1,0],\r\n    '83': [0,1],\r\n    '87': [0,-1],\r\n    '37': [-1,0],\r\n    '39': [1,0],\r\n    '40': [0,1],\r\n    '38': [0,-1]\r\n};\r\nlet state = {\r\n    canvas: null,\r\n    context: null,\r\n    snake: [{x: 17, y:30}],\r\n    direction: {x: 0, y:-1},\r\n    prey: {x:parseInt(Math.random() * BOARD_WIDTH),y:parseInt(Math.random() * BOARD_HEIGHT)},\r\n    growing: 5,\r\n    paint_color: '#22dd22',\r\n    score: 0,\r\n    runState: STATE_RUNNING\r\n};\r\n\r\nfunction randomXY(){\r\n    return {\r\n        x: parseInt(Math.random() * BOARD_WIDTH),\r\n        y: parseInt(Math.random() * BOARD_HEIGHT)\r\n    };\r\n}\r\nfunction tick(){\r\n    const head = state.snake[0];\r\n    const dx = state.direction.x;\r\n    const dy = state.direction.y;\r\n    const highestIndex = state.snake.length - 1;\r\n    let tail = {};\r\n    let interval = TICK;\r\n\r\n    Object.assign(tail,state.snake[state.snake.length-1]);\r\n\r\n    let didScore = (\r\n        head.x === state.prey.x && head.y === state.prey.y\r\n    );\r\n\r\n    if (state.runState === STATE_RUNNING) {\r\n        for (let idx = highestIndex; idx > -1 ; idx--){\r\n            const sq = state.snake[idx];\r\n\r\n            if (idx === 0){\r\n                sq.x += dx;\r\n                sq.y += dy;\r\n            } else {\r\n                sq.x = state.snake[idx-1].x;\r\n                sq.y = state.snake[idx-1].y;\r\n            }\r\n        }\r\n    } else if (state.runState === STATE_LOSING){\r\n        interval = 10;\r\n\r\n        if (state.snake.length > 0){\r\n            state.snake.splice(0,1);\r\n        }\r\n\r\n        if (state.snake.length === 0){\r\n            state.runState = STATE_RUNNING;\r\n            state.snake.push(randomXY());\r\n            state.prey = randomXY();\r\n        }\r\n    }\r\n\r\n    if (detectCollition()){\r\n        state.runState = STATE_LOSING;\r\n        state.growing = 0;\r\n        state.score = 0;\r\n        document.getElementById(\"score\").innerHTML = \"Score: \"+state.score;\r\n    }\r\n\r\n    if (didScore){\r\n        state.growing += GROW_SCALE;\r\n        state.prey = randomXY();\r\n        state.score+=10;\r\n        document.getElementById(\"score\").innerHTML = \"Score: \"+state.score;\r\n    }\r\n\r\n    if (state.growing > 0){\r\n        state.snake.push(tail);\r\n        state.growing-=1;\r\n    }\r\n\r\n    requestAnimationFrame(draw);\r\n    setTimeout(tick, interval)\r\n}\r\n\r\nfunction detectCollition(){\r\n    const head = state.snake[0];\r\n\r\n    if (head.x < 0 || head.x >= BOARD_WIDTH || head.y >= BOARD_HEIGHT \r\n    || head.y < 0){\r\n        return true;\r\n    }\r\n    for (var idx = 1; idx < state.snake.length; idx++){\r\n        const sq = state.snake[idx];\r\n        if (sq.x === head.x && sq.y === head.y){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction drawPixel(color,x,y){\r\n    state.context.fillStyle = color;\r\n    state.context.fillRect(\r\n        x * SQUARE_SIZE,\r\n        y * SQUARE_SIZE,\r\n        SQUARE_SIZE,\r\n        SQUARE_SIZE\r\n    )\r\n}\r\n\r\nfunction draw(){\r\n    state.context.clearRect(0,0,750,750)\r\n    for (var idx = 0; idx < state.snake.length; idx++){\r\n        const {x,y} = state.snake[idx];\r\n        drawPixel(state.paint_color,x,y);\r\n    }\r\n        \r\n    const {x,y} = state.prey;\r\n    drawPixel('yellow',x,y);\r\n}\r\n\r\nwindow.onload = function(){\r\n    state.canvas = document.querySelector('canvas');\r\n    state.context = state.canvas.getContext('2d');\r\n\r\n    window.onkeydown = function(e) {\r\n        const direction = DIRECTIONS_MAP[e.keyCode];\r\n        const snake_color = COLORS[e.keyCode];\r\n\r\n        if(direction){\r\n            const [x,y] = direction;\r\n            if (-x !== state.direction.x && -y !== state.direction.y){\r\n                state.direction.x = x;\r\n                state.direction.y = y;\r\n            }\r\n        }\r\n        if(snake_color){\r\n            state.paint_color=snake_color;\r\n        }\r\n    }\r\n\r\n    tick();\r\n}"]}